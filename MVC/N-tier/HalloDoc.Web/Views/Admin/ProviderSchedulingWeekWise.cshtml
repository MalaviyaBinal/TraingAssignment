@using System.Text.Json
@using System.Text.Json.Serialization
@model HalloDocWebEntity.ViewModel.ShiftDetailsModel
@{
    Layout = "_AdminHeader";
}
<link rel="stylesheet" href="~/css/Scheduling.css" />
<script src="~/js/daypilot-all.min.js"></script>
<div class="container ">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between mt-3">
                <h4 class="mt-3">Scheduling</h4>
                <a class="text-start text-info text-decoration-none " asp-action="AdminProvider" asp-controller="Admin">
                    <button class="btn btn-white  text-info border-info rounded ">
                        <i class="fa-solid fa-less-than"></i> Back
                    </button>
                </a>
            </div>
            <div class=" container rounded bg-white shadow py-3 ">
                <div class="d-flex align-items-center justify-content-between my-3">
                    <div class="col-md-4 col-sm-12">
                        <select class="form-select form-select-lg" id="Regions">

                            <option selected><i class="fa fa-search text-muted position-absolute" style="padding-top:10px; padding-left:10px;"></i>All Regions</option>

                        </select>
                    </div>

                    <div>
                        <button class="btn btn-info text-white me-2">Providers On Call</button>
                        <button class="btn btn-info text-white me-2">Shifts for Review</button>
                        <button class="btn btn-info text-white me-1" onclick="ModalofShift()">Add New Shift</button>
                    </div>

                </div>

                <div>
                    <div class="h5  heading">Monday,Dec 4 2023</div>
                </div>
                <div class="text-end mb-3">
                    <i class="bi bi-square-fill" style="color: #ff80ff;"></i>
                    <span class="me-2">Pending Shifts</span>
                    <i class="bi bi-square-fill" style="color: #00cc00;"></i>
                    <span>Approved Shifts</span>
                </div>

                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <a href="javascript:dp.startDate = dp.startDate.addDays(-7); dp.update();" class="text-decoration-none">
                            <i class="fa-solid fa-less-than text-white p-2" style="background-color:#1ad1ff;border-radius:20px;"></i>
                        </a>
                        <span style="height:20px;" id="change"><i class="bi bi-calendar3"></i> </span>

                        <a href="javascript:dp.startDate = dp.startDate.addDays(7); dp.update();">
                            <i class="fa-solid fa-greater-than text-white p-2 me-2" style="background-color:#1ad1ff;border-radius:20px;"></i>
                        </a>
                    </div>
                    <div>
                        <a asp-action="ProviderSchedulingDayWise" asp-controller="Admin"> <button class="btn btn-outline-info me-2">Day</button></a>
                        <a asp-action="ProviderSchedulingWeekWise" asp-controller="Admin"> <button class="btn btn-info text-white me-2">Week</button></a>
                        <a asp-action="ProviderSchedulingMonthWise" asp-controller="Admin"> <button class="btn btn-outline-info">Month</button></a>
                    </div>
                </div>
            </div>
            <span id="start" class="hide"></span>
            <div class="main">
                <div id="dp"></div>
            </div>
        </div>
    </div>
</div>
<div id="modalpopup">
</div>
<script>
    function ModalofShift() {
        console.log("dfdf");
        $.ajax({
            url: "/Admin/ModalofShift",
            data: { 'id': id },
            type: "GET",
            dataType: "html",
            success: function (data) {
                $("#modalpopup").html(data);
            },
            error: function () {
                alert("No Projects Found");
                $("#tableContent").html('An error has occurred');
            }
        });
    };
</script>
<script type="text/javascript">
    debugger;
    console.log("hello");
    @{
        JsonSerializerOptions options = new JsonSerializerOptions
            {
                ReferenceHandler = ReferenceHandler.Preserve
            };
        string listJson = System.Text.Json.JsonSerializer.Serialize(Model.physicians, options);
        string eventsJson = System.Text.Json.JsonSerializer.Serialize(Model.shiftDetails, options);
    }
        const resourcess = @Html.Raw(listJson);
    const eventss = @Html.Raw(eventsJson);
    console.log(eventss)
    console.log(resourcess)
    const picker = new DayPilot.DatePicker({
        target: 'start',
        pattern: 'yyyy-MM-dd',
        resetTarget: true,
        onTimeRangeSelected: args => {
            dp.update({
                startDate: args.start
            });
        }
    });
    const dp = new DayPilot.Scheduler("dp", {
        cellWidthSpec: "Auto",
        timeHeaders: [{ groupBy: "Day", format: "dddd dd" }],
        scale: "Day",
        days: 7,
        startDate: DayPilot.Date.today().firstDayOfWeek(),
        timeRangeSelectedHandling: "Disabled",
        eventMoveHandling: "Disabled",
        eventResizeHandling: "Update",
        onEventResized: (args) => {
            args.control.message("Event resized: " + args.e.text());
        },
        eventDeleteHandling: "Update",
        onEventDeleted: (args) => {
            args.control.message("Event deleted: " + args.e.text());
        },
        eventClickHandling: "Disabled",
        eventHoverHandling: "Bubble",
        bubble: new DayPilot.Bubble({
            onLoad: (args) => {
                args.html = "Event details";
            },
        }),
        treeEnabled: true,
    });
    dp.events.list = [];
    dp.init();
    const app = {
        elements: {
            previous: document.getElementById("previous"),
            next: document.getElementById("next"),
            start: document.querySelector("#start"),
            change: document.querySelector("#change"),
        },
        loadData() {
            const resources = [{ html: "<b>Coverage</b>", id: "R0" }];
            console.log(resourcess['$values']);
            for (let i = 0; i < resourcess['$values'].length; ++i) {
                let path = resourcess['$values'][i].Photo == null ? "/PhysicianDoc/user (1).jpg" : `/PhysicianDoc/${resourcess['$values'][i].Physicianid}/${resourcess['$values'][i].Photo}`;
                let obj = {
                    html: `<div class='coverage-flex'><div class='coverage-inner-flex'><img style='width:15px;height:15px;' src='${path}' class='coverage-img' /><span>${resourcess['$values'][i].Firstname.charAt(0).toUpperCase() + resourcess['$values'][i].Firstname.slice(1) + ", " + resourcess['$values'][i].Lastname.charAt(0).toUpperCase() + "."}</span></div></div>`,
                    id: resourcess['$values'][i].Physicianid
                }
                resources.push(obj);
            }
            const events = []
            console.log(eventss['$values']);
            for (let i = 0; i < eventss['$values'].length; ++i) {
                let obj = {
                    id: eventss['$values'][i].Shiftdetailid,
                    text: `${new DayPilot.Date(eventss['$values'][i].Shiftdate.split("T")[0] + "T" + eventss['$values'][i].Starttime).toString("h:mm tt")} - ${new DayPilot.Date(eventss['$values'][i].Shiftdate.split("T")[0] + "T" + eventss['$values'][i].Endtime).toString("h:mm tt")} `,
                    start: eventss['$values'][i].Shiftdate.split("T")[0] + "T" + eventss['$values'][i].Starttime,
                    end: eventss['$values'][i].Shiftdate.split("T")[0] + "T" + eventss['$values'][i].Endtime,
                    resource: eventss['$values'][i].Physicianid,
                    regionid: eventss['$values'][i].RegionName,
                    backColor: eventss['$values'][i].Status == 0 ? "#EEACD0" : "#A1D0A2"
                }
                events.push(obj)
            }
            console.log(events)
            dp.update({ resources, events });
        },
        barColor(i) {
            const colors = ["#3c78d8", "#6aa84f", "#f1c232", "#cc0000"];
            return colors[i % 4];
        },
        init() {
            this.addEventHandlers();
            this.loadData();
        },
        addEventHandlers() {
            this.elements.change.addEventListener("click", (ev) => {
                ev.preventDefault();
                picker.show();
            });
        },
    };
    app.init();
    document.querySelector(".scheduler_default_corner_inner").nextElementSibling.style.display = "none";
</script>
<script>
    document.getElementById("provider").classList.add("active");
</script>