@model HalloDocWebEntity.ViewModel.AdminRecordsModel
<div class="table-responsive">
    <table class="table ">
        <thead>
            <tr class="bg-light text-muted h-100">
                <th scope="col">No.</th>
                <th scope="col">Patient Name</th>
                <th scope="col">Requestor</th>
                <th scope="col">Date Of Service</th>
                <th scope="col">Close Case Date</th>
                <th scope="col">Email</th>
                <th scope="col">Phone Number</th>
                <th scope="col">Address</th>
                <th scope="col">Zip</th>
                <th scope="col">Request Status</th>
                <th scope="col">Physician Name</th>
                <th scope="col">Physician Note</th>
                <th scope="col">Admin Note</th>
                <th scope="col">Patient Note</th>
                <th scope="col">Cancelled By Provider</th>
                <th scope="col">Delete Permanently</th>
            </tr>
        </thead>
        <tbody>
            @{
                var no = 1;
            }
            @foreach (var data in Model.Data)
            {
                <tr>
                    <td>@no</td>
                    <td> @data.Firstname @data.Lastname</td>
                    @if (Model.ReqType.Any(x => x.Requesttypeid == @data.Request.Requesttypeid))
                    {
                        var name = Model.ReqType.FirstOrDefault(x => x.Requesttypeid == @data.Request.Requesttypeid);
                        <td>
                            @name.Name
                        </td>
                    }
                    <td> @data.Request.Createddate</td>
                    <td> @data.Request.Createddate</td>
                    <td>@data.Email</td>
                    <td>@data.Phonenumber</td>
                    <td>@data.Street,@data.City,@data.State</td>
                    <td>@data.Zipcode</td>
                    @switch (@data.Request.Status)
                    {
                        case 1:
                            <td>New</td>
                            break;
                        case 2:
                            <td>Pending</td>
                            break;
                        case 3 or 7 or 8:
                            <td>To Close</td>
                            break;
                        case 4 or 5:
                            <td>Active</td>
                            break;
                        case 6:
                            <td>Conclude</td>
                            break;
                        case 9:
                            <td>Unpaid</td>
                            break;
                        case 10:
                            <td>Clear</td>
                            break;
                        case 11:
                            <td>Block</td>
                            break;
                    }
                    @if (data.Request.Physicianid != null)
                    {
                        @foreach (var a in Model.phy)
                        {
                            @if (data.Request.Physicianid == a.Physicianid)
                            {
                                <td class="font1">
                                    @a.Firstname @a.Lastname
                                </td>
                            }
                        }
                    }
                    else
                    {
                        <td class="font1">
                            --
                        </td>
                    }
                    @if (Model.ReqNotes.Any(x => x.Requestid == @data.Request.Requestid))
                    {
                        var notes = Model.ReqNotes.FirstOrDefault(x => x.Requestid == @data.Request.Requestid);
                        if (@notes.Physiciannotes != null)
                        {
                            <td>
                                @notes.Physiciannotes;
                            </td>
                        }
                        else
                        {
                            <td>
                                --
                            </td>
                        }
                        if (@notes.Adminnotes != null)
                        {
                            <td>
                                @notes.Adminnotes;
                            </td>
                        }
                        else
                        {
                            <td>
                                --
                            </td>
                        }
                    }
                    else
                    {
                        <td>--</td>
                        <td>--</td>
                    }
                    <td>--</td>
                    <td>--</td>
                    <td>
                        <button class="btn btn-outline-info" onclick="deleteRequest(this)" value="@data.Request.Requestid">Delete</button>
                    </td>
                </tr>
                no++;
            }
        </tbody>
    </table>
</div>
<div id="modalpopup"></div>
<script>
   
    $("#cancelbtn").click(function () {
        $("#modalpopup").remove();
        $(".modal-backdrop").remove()
        location.reload();
    });
    function deleteRequest(element) {
        debugger;
        var id = element.value;
        $.ajax({
            url: "/Admin/ShowDeleteModal",
            data: { 'id': id, 'acntType': "Request" },
            type: "GET",
            dataType: "html",
            success: function (data) {

                $("#modalpopup").html(data);

            },
            error: function () {
                alert("No Projects Found");

            }
        });
    };
</script>
